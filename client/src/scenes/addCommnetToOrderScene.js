const { Scenes } =  require("telegraf");
const {User} = require('../api/controller/index');

const addCommnetToOrderScene = new Scenes.BaseScene('addCommnetToOrder');

addCommnetToOrderScene.enter(async ctx => {
    await ctx.reply('–í–∫–∞–∂–∏ –ø—Ä–∏–º—ñ—Ç–∫—É –¥–æ –≤–ª–∞—Å–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üòâ', {reply_markup:{
        inline_keyboard: [
            [
                {
                    text: "–ù–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏ –ø—Ä–∏–º—ñ—Ç–∫—É", 
                    callback_data: "cancel_commit"
                }
            ]
        ]
    }});
})

addCommnetToOrderScene.action('cancel_commit', async (ctx) => {
    ctx.scene.leave('addCommnetToOrder');
})

addCommnetToOrderScene.on('text', async ctx => {
    let controller = new User();
    await controller.updateUser(ctx.chat.id, {sec_info: String(ctx.message.text)});
    await ctx.reply('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ ‚úÖ');
    ctx.scene.leave('addCommnetToOrder');
})

addCommnetToOrderScene.leave(async ctx => {
    await ctx.reply('–ù–∞—Ç–∏—Å–Ω–∏ "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è" —ñ –±—É–¥–µ–º–æ –∑–∞–≤–µ—Ä—à—É–≤–∞—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüòâ', {reply_markup:{
        inline_keyboard: [
            [
                {
                    text: "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è", 
                    callback_data: "finish_order"
                }
            ]
        ]
    }});
})

module.exports = addCommnetToOrderScene;