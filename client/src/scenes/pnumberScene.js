const { Scenes } =  require("telegraf");
const {menu_btn} = require('../models/buttons');
const {User} = require('../api/controller/index');
const Telegraf = require('telegraf')

const pnumberScene = new Scenes.BaseScene('setNumber');

pnumberScene.enter(async ctx => {
    await ctx.reply('–ü–æ–¥—ñ–ª–∏—Å—å —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –≤–∫–∞–∂–∏ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ +380–•–•–•–•–•–•–•–•–•, —â–æ–±–∏ —ñ–∑ —Ç–æ–±–æ—é –º—ñ–≥ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É –∑–≤\'—è–∑–∞—Ç–∏—Å—å –∫—É—Ä\'—î—Ä', {
        reply_markup: {
          keyboard: [
            [
              {
                text: "üì≤ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –Ω–æ–º–µ—Ä–æ–º",
                request_contact: true,
              },
            ],
          ],
          one_time_keyboard: true,
          remove_keyboard: true,
          resize_keyboard: true,
        },
      });
})

pnumberScene.on('message', async (ctx) => {
    const phoneNumber = ctx.message.contact != undefined ? ctx.message.contact.phone_number : ctx.message.text
    let Users = new User();
    await Users.updateUser(ctx.chat.id, {pnumber: String(phoneNumber)});
    await ctx.scene.leave('setNumber');
  })

pnumberScene.leave(async ctx => {
    await ctx.reply('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ‚úÖ\n–ù–∞—Ç–∏—Å–Ω–∏ "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è" —ñ –±—É–¥–µ–º–æ —Ä—É—Ö–∞—Ç–∏—Å—å –¥–∞–ª—ñüòâ', {reply_markup:{
        inline_keyboard: [
            [
                {
                    text: "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è", 
                    callback_data: "cont_reg"
                }
            ]
        ]
    }});
})

module.exports = pnumberScene;