const { Scenes } =  require("telegraf");
const {menu_btn} = require('../models/buttons');
const {User} = require('../api/controller/index');

const nameScene = new Scenes.BaseScene('setName');
let type = "adress";

nameScene.enter(async ctx => {
    await ctx.reply('–í–∫–∞–∂–∏ —Å–≤–æ—î —ñ–º\'—è, –∞–±–∏ –∑–Ω–∞—Ç–∏ —è–∫ –¥–æ —Ç–µ–±–µ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—åüòâ', {
        reply_markup: {
          remove_keyboard: true,
        },
      });
})

nameScene.hears(/(.+)/, async ctx => {
    const [name] = ctx.match.slice(1);
    console.log(name);
    let controller = new User();
    await controller.updateUser(ctx.chat.id, {client_name: String(name)});
    ctx.scene.leave('setName');
})

nameScene.leave(async ctx => {
    await ctx.reply('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ‚úÖ\n–ù–∞—Ç–∏—Å–Ω–∏ "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è" —ñ –±—É–¥–µ–º–æ —Ä—É—Ö–∞—Ç–∏—Å—å –¥–∞–ª—ñüòâ', {reply_markup:{
        inline_keyboard: [
            [
                {
                    text: "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚ñ∂Ô∏è", 
                    callback_data: "cont_reg"
                }
            ]
        ]
    }});
})

module.exports = nameScene;