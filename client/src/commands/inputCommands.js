const {User, Ticket} = require('../api/controller/index');
const {menu_btn} = require('../models/buttons');

async function getAdress(bot){
    bot.hears(/(.+)/, async ctx => {
        const [adress] = ctx.match.slice(1);
        let controller = new User();
        if(String(adress) != '–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå'){
            await controller.updateUser(ctx.chat.username, {adress: String(adress)});
            let user = await controller.getByUsername(ctx.chat.username);
            await ctx.reply('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ‚úÖ\n' + `–ù–∞—Ç–∏—Å–Ω–∏ —â–µ —Ä–∞–∑ '–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üìù' –∞–±–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–ª–µ–Ω–Ω—èüòâ`, {reply_markup:menu_btn})
        }else if(String(adress) === '–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå'){
            await ctx.reply('–°–∫–∞—Å–æ–≤–∞–Ω–æ üòï‚ùå\n–Ø–∫—â–æ –±–∞–∂–∞—î—à –≤–Ω–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å—É –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - –Ω–∞—Ç–∏—Å–Ω–∏ "–í–∫–∞–∑–∞—Ç–∏ –∞–¥—Ä–µ—Å—É üîÑ"üòâ\n–£ —Ä–∞–∑—ñ —è–∫—â–æ —Ö–æ—á–µ—à –≤—ñ–¥—Ä–∞–∑—É –≤–∫–∞–∑–∞—Ç–∏ –∞–¥—Ä–µ—Å –ø—ñ–¥ —á–∞—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - –Ω–∞—Ç–∏—Å–Ω–∏ "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üìù" —ñ –≤–∫–∞–∂–∏ –∞–¥—Ä–µ—Å—É –ø—ñ–¥ —á–∞—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–∫–∏üòâ', {reply_markup: menu_btn});
        }
    })
}

module.exports = {
    getAdress,
};